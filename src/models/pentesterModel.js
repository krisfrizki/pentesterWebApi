const {Pool} = require('pg');
const config = require('../../config');

// Inisialisasi koneksi ke basis data menggunakan konfigurasi dari config.js
const pool = new Pool(config.pgConfig);

const registerPentesterModel = async (username, email, password) => {
    try {
      const existingPentester = await pool.query('SELECT * FROM pentester WHERE email = $1', [email]);
      if (existingPentester.rows.length > 0) {
        return {
          status: false,
          message: 'Email sudah pernah digunakan'
        }
      } else {
        const joined = new Date().toISOString();
        const role = 'pentester'
        await pool.query('INSERT INTO pentester (username, email, password, joined, role) VALUES ($1, $2, $3, $4, $5)', [username, email, password, joined, role]);
        return {
          status: true,
          message: 'Registrasi sukses'
        }
      }
    } catch (error) {
        console.log('Kesalahan pada registrasi user', error);
        return {
            status: false,
            message: 'kesalahan server internal'
        }
    }
};

// Fungsi untuk memeriksa apakah username Pentester sudah ada
const checkUsernamePentester = async username => {
    const result = await pool.query('SELECT * FROM pentester WHERE username = $1', [username]);
    return result.rows.length > 0;
};

const loginPentesterModel = async (username) => {
    try {
      const result = await pool.query('SELECT * FROM pentester WHERE username = $1', [username]);
      if (result.rows.length === 0) {
        return null;
      }
      return result.rows[0];
    } catch (error) {
        console.log('Kesalahan pada login user', error);
        throw error;
    }
};

module.exports = {
    registerPentesterModel,
    checkUsernamePentester,
    loginPentesterModel
}